server {
  listen [::]:80 default_server;
  listen 80;

  return 444;
}

server {
  listen [::]:80 deferred;
  listen 80 deferred;
  server_name ${server_host};

  return 301 https://$server_name$request_uri;
}

server {
  listen [::]:443 ssl default_server;
  listen 443 ssl default_server;

  include /etc/nginx/helpers/server/ssl.conf;

  ssl_certificate /run/secrets/certificate.crt;
  ssl_certificate_key /run/secrets/certificate.key;

  return 444;
}

server {
  listen [::]:443 ssl http2 deferred;
  listen 443 ssl http2 deferred;
  server_name ${server_host};

  root /usr/share/nginx/html/public;

  charset utf-8;

  ssl_certificate /run/secrets/certificate.crt;
  ssl_certificate_key /run/secrets/certificate.key;

  #error_page 404 /not_found;
  #error_page 500 502 503 504 /error;

  include /etc/nginx/helpers/server/cache-file-descriptors.conf;
  include /etc/nginx/helpers/server/extra-security.conf;
  include /etc/nginx/helpers/server/ssl.conf;

  include /etc/nginx/helpers/location/protect-system-files.conf;
  include /etc/nginx/helpers/location/restrictions.conf;

  location / {
    try_files $uri /index.php$is_args$args;
  }

  location ~ ^/index\.php(/|$) {
    fastcgi_pass ${php_fpm_host}:${php_fpm_port};
    fastcgi_split_path_info ^(.+\.php)(/.*)$;

    include fastcgi_params;

    # Ensures PHP's OPcache caching information is busted by resolving symlinks (via `realpath` stuff)
    fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
    fastcgi_param DOCUMENT_ROOT $realpath_root;

    # Prevents URIs that include the front controller (i.e. `http:/a.tld/index.php/path`)
    internal;
  }

  location ~ \.php$ {
    return 404;
  }
}